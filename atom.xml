<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[house9]]></title>
  <link href="http://jessehouse.com/atom.xml" rel="self"/>
  <link href="http://jessehouse.com/"/>
  <updated>2015-03-19T16:51:35-07:00</updated>
  <id>http://jessehouse.com/</id>
  <author>
    <name><![CDATA[Jesse House]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[upgrading from rspec 2 to rspec 3]]></title>
    <link href="http://jessehouse.com/blog/2015/03/19/upgrading-from-rspec-2-to-rspec-3/"/>
    <updated>2015-03-19T16:42:00-07:00</updated>
    <id>http://jessehouse.com/blog/2015/03/19/upgrading-from-rspec-2-to-rspec-3</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve spent the last few days upgrading a rails application from 4.1 to 4.2 and as part of the upgrade going from rspec 2.99 to 3.2.</p>

<p>The rspec upgrade was much easier than I had anticipated thanks to the <a href="https://github.com/yujinakayama/transpec">transpec</a> <a href="https://rubygems.org/gems/transpec">gem</a>.</p>

<ul>
<li>added the <a href="https://github.com/rspec/rspec-its">rspec-its</a> <a href="https://rubygems.org/gems/rspec-its">gem</a> to my Gemfile</li>
<li>then ran the transpec migration</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install transpec
</span><span class='line'>transpec --keep its --negative-form to_not
</span><span class='line'>rspec spec
</span><span class='line'>git commit -aeF .git/COMMIT_EDITMSG</span></code></pre></td></tr></table></div></figure>


<p>Only a few minor tweaks were needed to my specs after the migration &ndash; the transpec is brilliant!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ember-cli broccoli fingerprinting]]></title>
    <link href="http://jessehouse.com/blog/2015/02/15/ember-cli-broccoli-fingerprinting/"/>
    <updated>2015-02-15T09:07:00-08:00</updated>
    <id>http://jessehouse.com/blog/2015/02/15/ember-cli-broccoli-fingerprinting</id>
    <content type="html"><![CDATA[<p>ember-cli uses broccoli for asset compilation and <a href="http://www.ember-cli.com/asset-compilation/#fingerprinting-and-cdn-urls">fingerprinting</a> of asset file names.</p>

<blockquote><p>When the environment is production, the addon will automatically fingerprint your js, css, png, jpg, and gif assets &hellip;</p></blockquote>

<p>No fingerprinting occurs in the development environment. These are great defaults, but what if you have a staging environment and want to fingerprint those assets? You can override the fingerprint setting when the ember application is created.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">EmberApp</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">fingerprint</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">enabled</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now all environments will fingerprint assets, but we really don&rsquo;t want that in development. Since the ember application has not booted up yet we do not have access to the configuration object directly &ndash; lucky for us it is available on the <code>process</code> object before the ember application is created.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Brocfile.js</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">emberEnvironment</span> <span class="o">=</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">EMBER_ENV</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">fingerprint</span> <span class="o">=</span> <span class="p">(</span><span class="nx">emberEnvironment</span> <span class="o">===</span> <span class="s1">&#39;production&#39;</span> <span class="o">||</span> <span class="nx">emberEnvironment</span> <span class="o">===</span> <span class="s1">&#39;staging&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">EmberApp</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">fingerprint</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">enabled</span><span class="o">:</span> <span class="nx">fingerprint</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS IAM policy for uploading SSL certificates]]></title>
    <link href="http://jessehouse.com/blog/2015/02/08/aws-iam-policy-for-uploading-ssl-certificates/"/>
    <updated>2015-02-08T10:04:00-08:00</updated>
    <id>http://jessehouse.com/blog/2015/02/08/aws-iam-policy-for-uploading-ssl-certificates</id>
    <content type="html"><![CDATA[<p>The following <a href="http://aws.amazon.com/iam/">IAM</a> policy can be used to upload SSL certificates to <a href="http://aws.amazon.com/">AWS</a> for use by <a href="http://aws.amazon.com/cloudfront/">cloudfront</a> or <a href="http://aws.amazon.com/elasticloadbalancing/">ELB</a>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "Version": "2012-10-17",
</span><span class='line'>  "Statement": [
</span><span class='line'>    {
</span><span class='line'>      "Effect": "Allow",
</span><span class='line'>      "Action": [
</span><span class='line'>        "iam:DeleteServerCertificate",
</span><span class='line'>        "iam:UploadServerCertificate",
</span><span class='line'>        "iam:ListServerCertificates",
</span><span class='line'>        "iam:GetServerCertificate"
</span><span class='line'>      ],
</span><span class='line'>      "Resource": "*"
</span><span class='line'>    }
</span><span class='line'>  ]
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>This policy gives full access to certificate management and nothing else.</p>

<h2>Resources</h2>

<ul>
<li><a href="https://bryce.fisher-fleig.org/blog/setting-up-ssl-on-aws-cloudfront-and-s3/">https://bryce.fisher-fleig.org/blog/setting-up-ssl-on-aws-cloudfront-and-s3/</a></li>
<li><a href="https://www.tiredpixel.com/2014/09/01/secure-static-websites-using-aws-s3-ssl-aws-cloudfront-and-aws-route-53/">https://www.tiredpixel.com/2014/09/01/secure-static-websites-using-aws-s3-ssl-aws-cloudfront-and-aws-route-53/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rbenv and Your user account isn't allowed to install to the system Rubygems]]></title>
    <link href="http://jessehouse.com/blog/2015/02/03/rbenv-and-your-user-account-isnt-allowed-to-install-to-the-system-rubygems/"/>
    <updated>2015-02-03T09:54:00-08:00</updated>
    <id>http://jessehouse.com/blog/2015/02/03/rbenv-and-your-user-account-isnt-allowed-to-install-to-the-system-rubygems</id>
    <content type="html"><![CDATA[<p>This happened to me after re-installing my OS and using a fresh install of <a href="https://github.com/sstephenson/rbenv">rbenv</a>. I cloned my application repository and went to execute a <code>bundle install</code> and received the following error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Fetching source index from http://rubygems.org/
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Your user account isn't allowed to install to the system Rubygems.
</span><span class='line'>You can cancel this installation and run:
</span><span class='line'>
</span><span class='line'>    bundle install --path vendor/bundle
</span><span class='line'>
</span><span class='line'>to install the gems into ./vendor/bundle/, or you can enter your password
</span><span class='line'>and install the bundled gems to Rubygems using sudo.
</span><span class='line'>
</span><span class='line'>Password:</span></code></pre></td></tr></table></div></figure>


<p>What? rbenv should not be prompting me to use sudo, it was trying to install gems on the system version of ruby. Running <code>rbenv local</code> returned <code>2.1.4</code> as expected, what the heck was going on?</p>

<p><code>gem list | grep bundler</code> returned nothing &ndash; doh! I didn&rsquo;t have bundler installed via rbenv so it was falling back to the system ruby. I was not expecting it to use a different version of bundler.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rbenv local
</span><span class='line'>gem install bundler
</span><span class='line'>rbenv rehash
</span><span class='line'>bundle</span></code></pre></td></tr></table></div></figure>


<p>And all was right with the world again!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Mac OS X for rails development]]></title>
    <link href="http://jessehouse.com/blog/2015/02/02/setup-mac-os-x-for-rails-development/"/>
    <updated>2015-02-02T09:33:00-08:00</updated>
    <id>http://jessehouse.com/blog/2015/02/02/setup-mac-os-x-for-rails-development</id>
    <content type="html"><![CDATA[<p>Whenever I get new machine or re-install my OS I like to use pivotals <a href="https://github.com/pivotal-sprout/sprout-wrap">sprout-wrap</a> for the setup. I have been through the process many times and finally documented it back in October.</p>

<p>From the app store install XCode</p>

<ul>
<li>open XCode and accept the terms, then close app</li>
<li>from the terminal run: <code>xcode-select --install</code></li>
<li>copy ssh keys from old machine via airdrop</li>
<li>then install sprout-wrap dependencies using the built in version of Ruby that ships with Mac OS X:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo gem install soloist
</span><span class='line'>sudo gem install bundler
</span><span class='line'>mkdir installs
</span><span class='line'>cd installs
</span><span class='line'>git clone https://github.com/pivotal-sprout/sprout-wrap.git
</span><span class='line'>cd sprout-wrap
</span><span class='line'>sudo bundle</span></code></pre></td></tr></table></div></figure>


<p>Modify the <code>soloistrc</code> file if desired; for me that means adding &lsquo;sourcetree&rsquo;, &lsquo;hipchat&rsquo; and a few others to the casks section.</p>

<p>The full list of available casks are here: <a href="https://github.com/pivotal-sprout/sprout-osx-apps/tree/master/recipes">https://github.com/pivotal-sprout/sprout-osx-apps/tree/master/recipes</a></p>

<p>You probably want to change the &lsquo;Energy Saver&rsquo; settings to never while the installs are running.</p>

<p><code>bundle exec soloist</code></p>

<p>Enter your password after prompted and then watch the magic happen&hellip;</p>

<p>A few hours later, after sprout-wrap is done; time for a few more &lsquo;manual&rsquo; installs</p>

<ul>
<li><a href="https://github.com/carlhuda/janus">janus</a> for vim configuration (i dont&#8217; use vim much but occasionally pair with people who do)</li>
<li>Clone personal dotfiles</li>
<li>install some firefox add ons</li>
<li>For chrome once I login to Google all of my add ons will auto install</li>
<li>Install <a href="http://www.sublimetext.com/3">SublimeText3</a> and <a href="https://packagecontrol.io/installation">Package Control</a>

<ul>
<li>If you prefer SublimeText2 it is available as a cask and can be installed via soloist</li>
</ul>
</li>
</ul>


<blockquote><p>then Encrypt your hard drive using FileVault2</p></blockquote>

<p>Done! :)</p>

<hr />

<p><em>NOTE: if you install sprout-wrap with defaults it will configure many os-x settings which you may or may not like; I personally do like them, especially the &lsquo;Fast Key Repeat Rate&rsquo;.</em></p>

<p>This post originally appeared on the private discussion board <a href="http://parley.rubyrogues.com/">Ruby Rogues Parley</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails, timezones, javascript and moment.js]]></title>
    <link href="http://jessehouse.com/blog/2014/12/13/rails-timezones-javascript-and-moment-js/"/>
    <updated>2014-12-13T10:33:00-08:00</updated>
    <id>http://jessehouse.com/blog/2014/12/13/rails-timezones-javascript-and-moment-js</id>
    <content type="html"><![CDATA[<p>So you need to display some datetimes in your new ember.js/angular/backbone UI and the times must be displayed for a timezone which is different from the logged on user.</p>

<p>Let us say we have an <code>Event</code> class in our rails application with the following attributes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">create_table</span> <span class="ss">:events</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:event_name</span><span class="p">,</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">text</span> <span class="ss">:description</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">datetime</span> <span class="ss">:start_at</span><span class="p">,</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:time_zone</span><span class="p">,</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="s1">&#39;UTC&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Rails uses the timezone format: <code>Eastern Time (US &amp; Canada)</code></p>

<p>Javascript (and therefore the <a href="http://momentjs.com/timezone/">moment-timezone</a> library) use <a href="http://en.wikipedia.org/wiki/Tz_database">the format</a>: <code>America/New_York</code></p>

<p>Rails can easily convert this for you and return the proper js format in your json:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Event</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">time_zone_mapping</span>
</span><span class='line'>    <span class="c1"># time_zone =&gt; Eastern Time (US &amp; Canada)</span>
</span><span class='line'>    <span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:TimeZone</span><span class="o">::</span><span class="no">MAPPING</span><span class="o">[</span><span class="nb">self</span><span class="o">.</span><span class="n">time_zone</span><span class="o">]</span> <span class="c1"># =&gt; America/New_York</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>and with <a href="http://momentjs.com/">moment.js</a> and <a href="http://momentjs.com/timezone/">moment-timezone</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// where &#39;event&#39; is the js representation of your rails model</span>
</span><span class='line'><span class="nx">moment</span><span class="p">(</span><span class="nx">event</span><span class="p">.</span><span class="nx">startAt</span><span class="p">).</span><span class="nx">tz</span><span class="p">(</span><span class="nx">event</span><span class="p">.</span><span class="nx">timeZoneMapping</span><span class="p">).</span><span class="nx">format</span><span class="p">(</span><span class="s1">&#39;dddd, MMMM Do YYYY h:mm a z&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>You will want to ensure that all json is being rendered with <code>UTC</code> as the configured timezone in rails,
i.e. <code>config.time_zone = 'UTC'</code> in your application config and/or <code>Time.zone = 'UTC'</code> in your api controller.</p>

<p>See also</p>

<ul>
<li><a href="http://jessehouse.com/blog/2013/11/15/working-with-timezones-and-ruby-on-rails/">Ruby on Rails: Timezones</a></li>
<li><a href="http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html">ActiveSupport::TimeZone</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rubocop script for your modified files]]></title>
    <link href="http://jessehouse.com/blog/2014/12/12/rubocop-for-staging-files/"/>
    <updated>2014-12-12T16:08:00-08:00</updated>
    <id>http://jessehouse.com/blog/2014/12/12/rubocop-for-staging-files</id>
    <content type="html"><![CDATA[<p>Our CI server is setup to run <a href="https://github.com/bbatsov/rubocop">rubocop</a> (ruby linter) after every checkin.
On my local development machine I prefer to lint files that have recently changed and not the entire code base.</p>

<p>Add this code to a shell script and it will lint all files that have been staged.
Note it uses the autofix rubocop option, optionally you could run it on non-staged files without the autofix flag.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git diff --name-only --cached | grep '\.rb' | xargs rubocop -a</span></code></pre></td></tr></table></div></figure>


<p>Don&rsquo;t forget to <code>git add .</code> after rubocop finds/fixes any code style violations in your staged files.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Protractor - promises all the way down]]></title>
    <link href="http://jessehouse.com/blog/2014/05/17/protractor-promises-all-the-way-down/"/>
    <updated>2014-05-17T19:54:00-07:00</updated>
    <id>http://jessehouse.com/blog/2014/05/17/protractor-promises-all-the-way-down</id>
    <content type="html"><![CDATA[<blockquote><p>Expected undefined to equal 7.</p></blockquote>

<p>We recently started using <a href="https://github.com/angular/protractor">Protractor</a> for end to end testing of an angular application. Protractor returns promises when locating elements on the page, in some cases you may need to do your assertions inside of callback functions.</p>

<p>For example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// this works just fine</span>
</span><span class='line'><span class="nx">expect</span><span class="p">(</span><span class="nx">element</span><span class="p">(</span><span class="nx">by</span><span class="p">.</span><span class="nx">id</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">)).</span><span class="nx">getText</span><span class="p">()).</span><span class="nx">toEqual</span><span class="p">(</span><span class="s1">&#39;x@x.com&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// this will fail</span>
</span><span class='line'><span class="nx">expect</span><span class="p">(</span><span class="nx">element</span><span class="p">(</span><span class="nx">by</span><span class="p">.</span><span class="nx">id</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">)).</span><span class="nx">getText</span><span class="p">().</span><span class="nx">length</span><span class="p">).</span><span class="nx">toEqual</span><span class="p">(</span><span class="mi">7</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// getText retuns a promise and not a string, instead...</span>
</span><span class='line'><span class="nx">element</span><span class="p">(</span><span class="nx">by</span><span class="p">.</span><span class="nx">id</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">)).</span><span class="nx">getText</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">expect</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">).</span><span class="nx">toEqual</span><span class="p">(</span><span class="mi">7</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can use the elementexplorer to debug your locators, but be aware that even non-matched elements will return an &lsquo;Element Finder&rsquo; object.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">node</span> <span class="nx">node_modules</span><span class="o">/</span><span class="nx">protractor</span><span class="o">/</span><span class="nx">bin</span><span class="o">/</span><span class="nx">elementexplorer</span><span class="p">.</span><span class="nx">js</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Getting</span> <span class="nx">page</span> <span class="nx">at</span><span class="o">:</span> <span class="nx">about</span><span class="o">:</span><span class="nx">blank</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">browser</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;http://www.angularjs.org&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kc">null</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">element</span><span class="p">(</span><span class="nx">by</span><span class="p">.</span><span class="nx">model</span><span class="p">(</span><span class="s1">&#39;xxxx&#39;</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span> <span class="nx">click</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">sendKeys</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">getTagName</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">getCssValue</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">getAttribute</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">getText</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">getSize</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">getLocation</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">isEnabled</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">isSelected</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">submit</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">clear</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">isDisplayed</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">getOuterHtml</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">getInnerHtml</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">toWireValue</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">findElements</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">isElementPresent</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">evaluate</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">findElement</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">find</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">isPresent</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">element</span><span class="o">:</span> <span class="p">{</span> <span class="p">[</span><span class="nb">Function</span><span class="p">]</span> <span class="nx">all</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">]</span> <span class="p">},</span>
</span><span class='line'>  <span class="s1">&#39;$&#39;</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">],</span>
</span><span class='line'>  <span class="s1">&#39;$$&#39;</span><span class="o">:</span> <span class="p">[</span><span class="nb">Function</span><span class="p">]</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>However, invoking one of the methods on an unmatched element will raise a <code>NoSuchElementError</code>.</p>

<p>Resources:</p>

<ul>
<li><a href="https://github.com/angular/protractor/blob/master/docs/api.md">https://github.com/angular/protractor/blob/master/docs/api.md</a></li>
<li><a href="http://www.youtube.com/watch?v=aQipuiTcn3U">http://www.youtube.com/watch?v=aQipuiTcn3U</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[stub paperclip s3 uploads in rspec]]></title>
    <link href="http://jessehouse.com/blog/2014/02/13/stub-paperclip-s3-uploads-in-rspec/"/>
    <updated>2014-02-13T14:22:00-08:00</updated>
    <id>http://jessehouse.com/blog/2014/02/13/stub-paperclip-s3-uploads-in-rspec</id>
    <content type="html"><![CDATA[<p>I was searching around stackoverflow trying to figure how to stub out s3 uploads with paperclip when running unit tests; came across a few that looked promising, along the lines of:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Model</span><span class="o">.</span><span class="n">any_instance</span><span class="o">.</span><span class="n">stubs</span><span class="p">(</span><span class="ss">:save_attached_files</span><span class="p">)</span><span class="o">.</span><span class="n">returns</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>But that was not working with <a href="https://github.com/thoughtbot/paperclip">paperclip</a> version 4, a quick look at the stacktrace reveled the method I wanted to mock.</p>

<pre>
Failure/Error: report.save
AWS::S3::Errors::InvalidAccessKeyId:
  The AWS Access Key Id you provided does not exist in our records.
/Users/me/.rvm/gems/ruby-2.1.0/gems/aws-sdk-1.33.0/lib/aws/core/client.rb:374:in `return_or_raise'
/Users/me/.rvm/gems/ruby-2.1.0/gems/aws-sdk-1.33.0/lib/aws/core/client.rb:475:in `client_request'
(eval):3:in `put_object'
/Users/me/.rvm/gems/ruby-2.1.0/gems/aws-sdk-1.33.0/lib/aws/s3/s3_object.rb:1751:in `write_with_put_object'
/Users/me/.rvm/gems/ruby-2.1.0/gems/aws-sdk-1.33.0/lib/aws/s3/s3_object.rb:607:in `write'
/Users/me/.rvm/gems/ruby-2.1.0/gems/paperclip-4.0.0/lib/paperclip/storage/s3.rb:337:in `block in flush_writes'
/Users/me/.rvm/gems/ruby-2.1.0/gems/paperclip-4.0.0/lib/paperclip/storage/s3.rb:314:in `each'
/Users/me/.rvm/gems/ruby-2.1.0/gems/paperclip-4.0.0/lib/paperclip/storage/s3.rb:314:in `flush_writes'
/Users/me/.rvm/gems/ruby-2.1.0/gems/paperclip-4.0.0/lib/paperclip/attachment.rb:239:in `save'
/Users/me/.rvm/gems/ruby-2.1.0/gems/paperclip-4.0.0/lib/paperclip/has_attached_file.rb:87:in `block in add_active_record_callbacks'
/Users/me/.rvm/gems/ruby-2.1.0/gems/activesupport-3.2.16/lib/active_support/callbacks.rb:460:in `_run__2863894366922569793__save__4567171711544756900__callbacks'
/Users/me/.rvm/gems/ruby-2.1.0/gems/activesupport-3.2.16/lib/active_support/callbacks.rb:405:in `__run_callback'
/Users/me/.rvm/gems/ruby-2.1.0/gems/activesupport-3.2.16/lib/active_support/callbacks.rb:385:in `_run_save_callbacks'
# ...
</pre>


<p>after double checking the code on github, a working stub:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Paperclip</span><span class="p">:</span><span class="ss">:Attachment</span><span class="o">.</span><span class="n">any_instance</span><span class="o">.</span><span class="n">stub</span><span class="p">(</span><span class="ss">:save</span><span class="p">)</span><span class="o">.</span><span class="n">and_return</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magick::ImageMagickError: WriteBlob Failed]]></title>
    <link href="http://jessehouse.com/blog/2014/02/07/magick-imagemagickerror-writeblob-failed/"/>
    <updated>2014-02-07T08:55:00-08:00</updated>
    <id>http://jessehouse.com/blog/2014/02/07/magick-imagemagickerror-writeblob-failed</id>
    <content type="html"><![CDATA[<p>I am using <a href="https://github.com/topfunky/gruff">gruff</a> to generate line charts in a rails project, putting together a quick proof of concept:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Chart</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">generate_line_graph</span>
</span><span class='line'>    <span class="n">g</span> <span class="o">=</span> <span class="ss">Gruff</span><span class="p">:</span><span class="ss">:Line</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">400</span><span class="p">)</span>
</span><span class='line'>    <span class="n">g</span><span class="o">.</span><span class="n">data</span><span class="p">(</span><span class="ss">:testing</span><span class="p">,</span> <span class="o">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
</span><span class='line'>    <span class="n">g</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s2">&quot;tmp/line.png&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>I quickly ran into the following exception:</p>

<pre>
Magick::ImageMagickError: WriteBlob Failed `/Users/ME/projects/CLIENT/code/RAILS_APP/tmp/line.png' @ error/png.c/MagickPNGErrorHandler/1804
  from /Users/ME/.rvm/gems/ruby-2.1.0/gems/gruff-0.5.1/lib/gruff/base.rb:425:in `write'
  from /Users/ME/.rvm/gems/ruby-2.1.0/gems/gruff-0.5.1/lib/gruff/base.rb:425:in `write'
  from /Users/ME/projects/CLIENT/code/RAILS_APP/app/models/reports/chart.rb:36:in `generate_line_graph'
  from (irb):16
  from /Users/ME/.rvm/gems/ruby-2.1.0/gems/railties-3.2.16/lib/rails/commands/console.rb:47:in `start'
  from /Users/ME/.rvm/gems/ruby-2.1.0/gems/railties-3.2.16/lib/rails/commands/console.rb:8:in `start'
  from /Users/ME/.rvm/gems/ruby-2.1.0/gems/railties-3.2.16/lib/rails/commands.rb:41:in `<top (required)>'
  from script/rails:6:in `require'
  from script/rails:6:in `main'
</pre>


<p><strong>The issue:</strong> the error is raised when writing to the tmp directory, changing to another directory and it worked as expected?</p>

<p><code>g.write("public/line.png")</code> and <code>g.write("public/tmp/line.png")</code> both worked</p>

<p>Turns out this was a simple <em>mistake on my part</em>, I just provisioned a new machine and cloned the project repo &ndash; I did not have a <em>tmp</em> directory in my project yet, it would be nice if the error message could have just told me so.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails: Timezones]]></title>
    <link href="http://jessehouse.com/blog/2013/11/15/working-with-timezones-and-ruby-on-rails/"/>
    <updated>2013-11-15T10:03:00-08:00</updated>
    <id>http://jessehouse.com/blog/2013/11/15/working-with-timezones-and-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>This article outlines some basic guidelines to follow when working with timezones in Ruby on Rails applications. Ruby on Rails has great support for timezones, but getting it working correctly can be tricky. Following the techniques below should save you some headache.</p>

<ul>
<li>Application Settings &ndash; use the default UTC settings</li>
<li>Set each request to the logged on users timezone</li>
<li>Display times and dates using the I18n view helpers</li>
<li>Override user timezone when displaying time aware entity</li>
<li>Override user timezone when saving time aware entity</li>
<li>Filter data based on the users timezone</li>
</ul>


<blockquote><p>Is it &lsquo;time zone&rsquo;, &lsquo;timezone&rsquo; or &lsquo;time-zone&rsquo;? Both styles end up being used in rails code base <code>config.time_zone</code> and <code>config.active_record.default_timezone</code>. I use timezone in this article and time_zone in the sample code base. Read more on <a href="http://english.stackexchange.com/questions/3934/time-zone-vs-timezone">stackexchange</a>.</p></blockquote>

<p>Sample code can be found at: <a href="https://github.com/house9/sample_timez">https://github.com/house9/sample_timez</a></p>

<p>The sample includes user profiles with timezone settings, an event model, and a work schedule model. It comes with a small set of sample data as well. To set it up locally, follow the <a href="https://github.com/house9/sample_timez/blob/master/README.md">README</a> instructions.</p>

<h2>Application Settings</h2>

<p>Rails uses the following defaults for a new application</p>

<ul>
<li>Application assumes it is running in UTC</li>
<li>Database assumes it is storing data in UTC</li>
</ul>


<blockquote><p>I recommend you keep these defaults!</p></blockquote>

<h4>in rails console (default settings)</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Time</span><span class="o">.</span><span class="n">zone</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'><span class="c1"># =&gt; &quot;UTC&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">default_timezone</span>
</span><span class='line'><span class="c1"># =&gt; :utc</span>
</span></code></pre></td></tr></table></div></figure>


<p>Both <em>can be</em> overriden in your application configuration file (config/application.rb) &ndash; <em>don&rsquo;t do it!</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Do NOT do this!!!</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">time_zone</span> <span class="o">=</span> <span class="s1">&#39;Central Time (US &amp; Canada)&#39;</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">active_record</span><span class="o">.</span><span class="n">default_timezone</span> <span class="o">=</span> <span class="ss">:local</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Set the timezone for each request</h2>

<p>How you determine the &lsquo;current users&rsquo; timezone will differ from application to application. In the sample code we are storing the value on the user model in a time_zone field. The sample application uses the techniques from this <a href="http://railscasts.com/episodes/106-time-zones-revised">RailsCast</a> episode. Alternatively you may  want to set it based on the client&rsquo;s browser setting.</p>

<p>Use an <code>around_filter</code> or combo of <code>before_filter</code> and <code>after_filter</code> to set each request&rsquo;s timezone in the <code>ApplicationController</code>. If we don&rsquo;t have a current user it will default to UTC.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>  <span class="n">around_filter</span> <span class="ss">:user_time_zone</span><span class="p">,</span> <span class="k">if</span><span class="p">:</span> <span class="ss">:current_user</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">user_time_zone</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Time</span><span class="o">.</span><span class="n">use_zone</span><span class="p">(</span><span class="n">current_user</span><span class="o">.</span><span class="n">time_zone</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Display times and dates using the I18n view helpers</h2>

<p>The <code>I18n</code> helpers are timezone aware. Aside from rendering the datetimes in the logged on users locale format, they will convert the stored UTC times to the current threads timezone.</p>

<ul>
<li><a href="http://guides.rubyonrails.org/i18n.html#adding-date-time-formats">http://guides.rubyonrails.org/i18n.html#adding-date-time-formats</a></li>
<li><a href="https://github.com/svenfuchs/rails-i18n/tree/master/rails/locale">https://github.com/svenfuchs/rails-i18n/tree/master/rails/locale</a></li>
</ul>


<p>On the homepage of the sample application there are numerous examples, also check out the <code>config/locales/en.yml</code> file.</p>

<p>Basic example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">I18n</span><span class="o">.</span><span class="n">localize</span><span class="p">(</span><span class="n">current_user</span><span class="o">.</span><span class="n">created_at</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Beware: I18n.localize does not handle nil values. You will need to guard against nils for nullable columns.</p></blockquote>

<h2>Override the display of dates</h2>

<p>In the sample application we have an Event model and a WorkSchedule model. Each model has its own timezone. Events are based on where the event will actually occur. In this case displaying the dates in the users timezone makes no sense at all, so we must override the display. There are a few techniques that can be employed:</p>

<ul>
<li><a href="http://api.rubyonrails.org/classes/DateTime.html#method-i-in_time_zone">in_time_zone</a> method (see work schedule in the sample application)</li>
<li><a href="http://api.rubyonrails.org/classes/Time.html#method-c-use_zone">Time.use_zone</a> blocks (see events in the sample application)</li>
</ul>


<p><code>in_time_zone</code> example: WorkSchedule overrides the start_at and end_at model attributes, therefore no special handling is needed in the views (of course you still need to use I18n.localize).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">WorkSchedule</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">start_at</span>
</span><span class='line'>    <span class="k">super</span><span class="o">.</span><span class="n">in_time_zone</span><span class="p">(</span><span class="n">time_zone</span><span class="p">)</span> <span class="k">if</span> <span class="k">super</span> <span class="o">&amp;&amp;</span> <span class="n">time_zone</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">end_at</span>
</span><span class='line'>    <span class="k">super</span><span class="o">.</span><span class="n">in_time_zone</span><span class="p">(</span><span class="n">time_zone</span><span class="p">)</span> <span class="k">if</span> <span class="k">super</span> <span class="o">&amp;&amp;</span> <span class="n">time_zone</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Time.use_zone</code> example: The Event model does <em>not</em> override start_at or end_at attributes, but uses Time.use_zone blocks in the views.</p>

<pre><code>&lt;!-- displayed times in the events timezone --&gt;
&lt;% Time.use_zone(@event.time_zone) do %&gt;
  &lt;%= l(@event.start_at) %&gt;
  &lt;%= l(@event.end_at) %&gt;
&lt;% end %&gt;
&lt;!-- now back to the logged on users timezone --&gt;
&lt;p&gt;
  Created at &lt;%= l(@event.created_at) %&gt;
  Updated at &lt;%= l(@event.updated_at) %&gt;
&lt;/p&gt;
</code></pre>

<p>There is odd behavior with Time.use_zone when doing in-memory sorting in ruby (<code>sort_by</code>). See the <code>HomeController</code> in the sample application. Ordered attributes do not convert in the use_zone block. I am not sure if this a bug or by design.</p>

<h2>Override timezone when saving data</h2>

<p>Sometimes you want to override saving data. Let&rsquo;s say my profile is set up with &lsquo;Pacific&rsquo; timezone, but I am creating an event that will occur in New York (&lsquo;Eastern&rsquo; timezone). I do <em>not</em> want rails to convert the times to &lsquo;Pacific&rsquo;. We can reset the current threads timezone to the events timezone before the create and update actions execute.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">EventsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:set_event_time_zone</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:create</span><span class="p">,</span> <span class="ss">:update</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># ... all action code (unchanged)</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">set_event_time_zone</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">params</span><span class="o">[</span><span class="ss">:event</span><span class="o">]</span>
</span><span class='line'>      <span class="no">Time</span><span class="o">.</span><span class="n">zone</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:event</span><span class="o">][</span><span class="ss">:time_zone</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Alternatively this could be done using <code>Time.use_zone</code> blocks in the create and update actions.</p>

<h2>Filter data based on the users timezone</h2>

<p>Rails will handle most of this automatically if you don&rsquo;t use raw sql. For example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">articles</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;published_at &gt; ?&quot;</span><span class="p">,</span> <span class="no">Time</span><span class="o">.</span><span class="n">zone</span><span class="o">.</span><span class="n">now</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you are filtering datetime data by the day be careful, the below queries are from the sample application logged in as a user with <code>(GMT+06:00) Astana</code> timezone</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># WARNING: do not do this</span>
</span><span class='line'><span class="c1"># events created yesterday</span>
</span><span class='line'><span class="n">yesterday</span> <span class="o">=</span> <span class="no">Date</span><span class="o">.</span><span class="n">current</span> <span class="o">-</span> <span class="mi">1</span><span class="o">.</span><span class="n">day</span>
</span><span class='line'><span class="no">Event</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;DATE(created_at) = ?&quot;</span><span class="p">,</span> <span class="n">yesterday</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; SELECT &quot;events&quot;.* FROM &quot;events&quot; WHERE (DATE(created_at) = &#39;2013-11-14&#39;)</span>
</span><span class='line'><span class="c1"># =&gt; 0 records</span>
</span></code></pre></td></tr></table></div></figure>


<p>the proper way</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># events created yesterday</span>
</span><span class='line'><span class="n">start_at</span> <span class="o">=</span> <span class="p">(</span><span class="no">Date</span><span class="o">.</span><span class="n">current</span> <span class="o">-</span> <span class="mi">1</span><span class="o">.</span><span class="n">day</span><span class="p">)</span><span class="o">.</span><span class="n">beginning_of_day</span>
</span><span class='line'><span class="n">end_at</span> <span class="o">=</span> <span class="n">start_at</span><span class="o">.</span><span class="n">end_of_day</span>
</span><span class='line'><span class="vi">@events_from_yesterday</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;created_at BETWEEN ? AND ?&quot;</span><span class="p">,</span> <span class="n">start_at</span><span class="p">,</span> <span class="n">end_at</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; SELECT &quot;events&quot;.* FROM &quot;events&quot; WHERE (created_at BETWEEN &#39;2013-11-13 18:00:00&#39; AND &#39;2013-11-14 17:59:59&#39;)</span>
</span><span class='line'><span class="c1"># =&gt; 12 records</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>This is not an issue when filtering on date columns (only datetime).</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># rails will do it for us, Date.current is timezone aware</span>
</span><span class='line'><span class="no">Meeting</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;scheduled_on = ?&quot;</span><span class="p">,</span> <span class="no">Date</span><span class="o">.</span><span class="n">current</span><span class="p">)</span>
</span><span class='line'><span class="c1"># but do NOT do this, will not work correctly at certain times of the day</span>
</span><span class='line'><span class="no">Meeting</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;scheduled_on = ?&quot;</span><span class="p">,</span> <span class="no">Date</span><span class="o">.</span><span class="n">today</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>In some situations you might need to query for data based on a specific timezone</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@corp_office</span> <span class="o">=</span> <span class="no">OpenStruct</span><span class="o">.</span><span class="n">new</span><span class="p">({</span> <span class="n">time_zone</span><span class="p">:</span> <span class="s2">&quot;Eastern Time (US &amp; Canada)&quot;</span> <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="no">Time</span><span class="o">.</span><span class="n">use_zone</span><span class="p">(</span><span class="vi">@corp_office</span><span class="o">.</span><span class="n">time_zone</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">start_at</span> <span class="o">=</span> <span class="no">Date</span><span class="o">.</span><span class="n">current</span><span class="o">.</span><span class="n">beginning_of_day</span>
</span><span class='line'>  <span class="n">end_at</span> <span class="o">=</span> <span class="n">start_at</span><span class="o">.</span><span class="n">end_of_day</span>
</span><span class='line'>  <span class="vi">@events_scheduled_today</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s2">&quot;start_at BETWEEN ? AND ?&quot;</span><span class="p">,</span> <span class="n">start_at</span><span class="p">,</span> <span class="n">end_at</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:start_at</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># =&gt; SELECT &quot;events&quot;.* FROM &quot;events&quot; WHERE (start_at BETWEEN &#39;2013-11-13 05:00:00&#39; AND &#39;2013-11-14 04:59:59&#39;) ORDER BY &quot;events&quot;.&quot;start_at&quot; ASC</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Conclusion</h2>

<p>I hope you found this article helpful. All feedback is welcome &ndash; I am sure I have left out some key information or just plain got it wrong.</p>

<p>Additional Reading: <a href="http://www.elabs.se/blog/36-working-with-time-zones-in-ruby-on-rails">http://www.elabs.se/blog/36-working-with-time-zones-in-ruby-on-rails</a></p>

<h2>ETC&hellip; (links and resources)</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="ss">time</span><span class="p">:</span><span class="ss">zones</span><span class="p">:</span><span class="n">all</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:TimeZone</span><span class="o">.</span><span class="n">zones_map</span>
</span><span class='line'><span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:TimeZone</span><span class="o">.</span><span class="n">us_zones</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>API: <a href="http://api.rubyonrails.org/classes/DateTime.html">DateTime</a></li>
<li>API: <a href="http://api.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-time_zone_select">time_zone_select</a></li>
<li>Stackoverflow: <a href="http://stackoverflow.com/questions/19664652/timezone-confusion-in-ruby-on-rails-4-0-postgres">Timezone confusion</a></li>
<li>Stackoverflow: <a href="http://stackoverflow.com/questions/17818329/rails-3-timezone-confusions/17840938#17840938">More timezone confusion</a></li>
<li>Postgresql: <a href="http://www.postgresql.org/docs/9.3/static/functions-datetime.html#FUNCTIONS-DATETIME-ZONECONVERT">AT TIME ZONE</a></li>
<li><a href="https://github.com/rails/rails/issues/9610">datetime_select preselects wrong times upon edit</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Good</span> <span class="n">naming</span> <span class="n">conventions</span> <span class="k">for</span> <span class="n">date</span> <span class="ow">and</span> <span class="n">datetime</span> <span class="p">(</span><span class="n">your</span> <span class="n">milage</span> <span class="n">may</span> <span class="n">vary</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="ss">datetime</span><span class="p">:</span> <span class="n">should</span> <span class="k">end</span> <span class="k">in</span> <span class="n">_at</span> <span class="p">(</span><span class="n">created_at</span><span class="p">,</span> <span class="n">updated_at</span><span class="p">,</span> <span class="n">start_at</span><span class="p">,</span> <span class="n">end_at</span><span class="p">)</span>
</span><span class='line'>    <span class="ss">date</span><span class="p">:</span> <span class="n">should</span> <span class="k">end</span> <span class="k">in</span> <span class="n">_on</span> <span class="p">(</span><span class="n">start_on</span><span class="p">,</span> <span class="n">end_on</span><span class="p">,</span> <span class="n">work_on</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>See also: <a href="http://jessehouse.com/blog/2014/12/13/rails-timezones-javascript-and-moment-js/">Rails, timezones, javascript and moment.js</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Cure for IBS]]></title>
    <link href="http://jessehouse.com/blog/2013/09/25/the-cure-for-ibs/"/>
    <updated>2013-09-25T16:45:00-07:00</updated>
    <id>http://jessehouse.com/blog/2013/09/25/the-cure-for-ibs</id>
    <content type="html"><![CDATA[<p>Wikipedia lists IBS (<a href="http://en.wikipedia.org/wiki/Irritable_bowel_syndrome">Irritable Bowel Syndrome</a>) as a &ldquo;Functional gastrointestinal disorder&rdquo;. It can cause both diarrhea or constipation and often alternates between the two. In short it is &ldquo;No fun&rdquo;.</p>

<p>I was first diagnosed with IBS in 2002 and was told to</p>

<ul>
<li>eat more fiber</li>
<li>take a stress reduction class</li>
</ul>


<p>I had never heard of such a thing as &lsquo;IBS&rsquo; before, it seems it is the &lsquo;catch-all&rsquo; diagnosis for stomach issues when the doctors do not know for certain what is causing the issue.</p>

<p>Things that did help me, but I would not say they &lsquo;cured&rsquo; me:</p>

<ul>
<li>reduce meat intake

<ul>
<li>replace with lentils and other legumes which are high in fiber</li>
</ul>
</li>
<li>increase cooked vegetable intake</li>
<li>eliminate dairy

<ul>
<li>this made a huge difference for me, for awhile</li>
</ul>
</li>
<li>yoga and meditation

<ul>
<li>IBS seems to be heavily linked to stress</li>
</ul>
</li>
</ul>


<p>Even after changing my diet I still had discomfort off and on. At one point in 2007 I thought my appendix was going to burst, went to the emergency room to find out my appendix was fine and that I was just really constipated. Talk about embarrassing.</p>

<p>After that I decided to try some acupuncture treatment. It did help some, but the thing that &lsquo;cured&rsquo; my IBS was the advice my acupuncturist gave me:</p>

<ul>
<li>do NOT eat while you are working on the computer</li>
<li>do NOT eat while you are driving</li>
</ul>


<p>The jist of it is when its time to eat, its time to eat and nothing else:</p>

<ul>
<li>chew your food</li>
<li>eat slowly</li>
<li>digest for at least 15 minutes before going back to work</li>
<li>maybe take a short walk while you digest</li>
<li>no reading or other mentally engaging activities</li>
</ul>


<p>Doing the above, my IBS has dwindled away, it did not happen overnight, it took many months of being very strict about my eating habits &ndash; mainly taking the time to digest after a meal before engaging in any work activities.</p>

<p>I am somewhat of a grazer, I like to eat small amounts through out the day while working. My work consists of being on the computer over 90% of my work day. Sometimes my work is stressful, even when it is not &lsquo;stressful&rsquo; it is still very engaging and involves a very high level of concentration.</p>

<p>I believe I was training my body to think it was under stress whenever I was eating, weather I was on the computer or not.</p>

<p>If you suffer from IBS I hope the above will work for you as well.</p>

<p>-Namaste</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Test]]></title>
    <link href="http://jessehouse.com/blog/2013/09/24/octopress-test/"/>
    <updated>2013-09-24T14:06:00-07:00</updated>
    <id>http://jessehouse.com/blog/2013/09/24/octopress-test</id>
    <content type="html"><![CDATA[<p>My first post using Octopress!</p>

<p>Followed the fine documenation here: <a href="http://octopress.org/docs/">http://octopress.org/docs/</a> to get up and running.</p>

<p>And used this script <a href="https://gist.github.com/juniorz/1564581">https://gist.github.com/juniorz/1564581</a> to import all of my old posts from blogger. It failed to import a few posts but overall worked great!</p>

<p>I do have various formatting issues on older posts, will need to revisit those in the future&hellip;</p>

<p>Authoring with markdown is so much better and no need for embedded gist: ya!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Hello Octopress&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Hello Octopress&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Puppet Solo (AKA: supply_drop)]]></title>
    <link href="http://jessehouse.com/blog/2013/07/06/puppet-solo-aka-supplydrop/"/>
    <updated>2013-07-06T00:00:00-07:00</updated>
    <id>http://jessehouse.com/blog/2013/07/06/puppet-solo-aka-supplydrop</id>
    <content type="html"><![CDATA[<div class='post'>
Similar to <a href="http://matschaffer.github.io/knife-solo/">knife-solo</a> for use with <a href="http://www.opscode.com/chef/">chef</a>, <a href="https://github.com/pitluga/supply_drop">supply_drop</a> allows you to provision servers using <a href="https://puppetlabs.com/">puppet</a> without the need for a puppet master server. It uses <a href="https://github.com/capistrano/capistrano">capistrano</a> for executing commands on the remote server. I put together a working sample set of puppet and supply_drop deployment scripts for&nbsp;provisioning&nbsp;a postgres server.<br /><br /><blockquote class="tr_bq">See the github repo at &nbsp;<a href="https://github.com/house9/puppet-solo-hello-world">https://github.com/house9/puppet-solo-hello-world</a></blockquote><br /><b>Resources</b><br /><br /><ul><li><a href="http://www.confreaks.com/videos/2479-railsconf2013-devops-for-the-rubyist-soul">http://www.confreaks.com/videos/2479-railsconf2013-devops-for-the-rubyist-soul</a></li><li><a href="https://speakerdeck.com/jtdowney/devops-for-the-rubyist-soul-at-rubynation-2013">https://speakerdeck.com/jtdowney/devops-for-the-rubyist-soul-at-rubynation-2013</a></li></ul><br /><br /><br /></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WAL-e chef cookbook]]></title>
    <link href="http://jessehouse.com/blog/2013/06/24/wal-e-chef-cookbook/"/>
    <updated>2013-06-24T00:00:00-07:00</updated>
    <id>http://jessehouse.com/blog/2013/06/24/wal-e-chef-cookbook</id>
    <content type="html"><![CDATA[<p>Postgres has various backup and restore options</p>

<ul>
<li><a href="http://www.postgresql.org/docs/9.2/static/backup.html">http://www.postgresql.org/docs/9.2/static/backup.html</a></li>
</ul>


<p>Do you have a recovery plan in case your Postgres server crashes &ndash; your daily pg_dump is probably not going to cut it.</p>

<p>Postgres uses Write-Ahead Logging (WAL)</p>

<blockquote><p>Write-Ahead Logging (WAL) is a standard method for ensuring data integrity. A detailed description can be found in most (if not all) books about transaction processing. Briefly, WAL&rsquo;s central concept is that changes to data files (where tables and indexes reside) must be written only after those changes have been logged, that is, after log records describing the changes have been flushed to permanent storage. If we follow this procedure, we do not need to flush data pages to disk on every transaction commit, because we know that in the event of a crash we will be able to recover the database using the log: any changes that have not been applied to the data pages can be redone from the log records. (This is roll-forward recovery, also known as REDO.)</p></blockquote>

<ul>
<li>from <a href="http://www.postgresql.org/docs/9.2/static/wal-intro.html">http://www.postgresql.org/docs/9.2/static/wal-intro.html</a></li>
</ul>


<p>Setting up Continuous Archiving and Point-in-Time Recovery (PITR) for your Postgres WAL files is very complex, lucky for us the WAL-e project has simplified this process greatly. WAL-e has utilities for sending all WAL files to an AWS S3 bucket as the log files are being generated. More Information, see:</p>

<ul>
<li><a href="http://www.postgresql.org/docs/9.2/static/continuous-archiving.html">http://www.postgresql.org/docs/9.2/static/continuous-archiving.html</a></li>
<li><a href="https://github.com/wal-e/wal-e">https://github.com/wal-e/wal-e</a></li>
</ul>


<p>Recently I put together a chef cookbook which installs WAL-e on a Postgres instance, see:</p>

<ul>
<li><a href="https://github.com/house9/wal-e-cookbook">https://github.com/house9/wal-e-cookbook</a></li>
<li><a href="https://github.com/house9/use_wal_e">https://github.com/house9/use_wal_e</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant and puppet postgres 9.2 on ubuntu]]></title>
    <link href="http://jessehouse.com/blog/2013/06/11/vagrant-and-puppet-postgres-92-on-ubuntu/"/>
    <updated>2013-06-11T00:00:00-07:00</updated>
    <id>http://jessehouse.com/blog/2013/06/11/vagrant-and-puppet-postgres-92-on-ubuntu</id>
    <content type="html"><![CDATA[<div class='post'>
Some vagrant configuration to install postgres 9.2 using puppet<br /><br /><script src="https://gist.github.com/house9/5762219.js"></script><noscript>see https://gist.github.com/house9/5762219.js</noscript><br /><script src="https://gist.github.com/house9/5762236.js"></script><noscript>see https://gist.github.com/house9/5762236.js</noscript><br /><b>Resources</b><br /><br /><ul><li><a href="https://forge.puppetlabs.com/puppetlabs/postgresql">https://forge.puppetlabs.com/puppetlabs/postgresql</a></li><li><a href="https://github.com/puppetlabs/puppetlabs-postgresql">https://github.com/puppetlabs/puppetlabs-postgresql</a></li></ul></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrantfile for setting up multiple machines with chef configuration]]></title>
    <link href="http://jessehouse.com/blog/2013/06/01/vagrantfile-for-setting-up-multiple/"/>
    <updated>2013-06-01T00:00:00-07:00</updated>
    <id>http://jessehouse.com/blog/2013/06/01/vagrantfile-for-setting-up-multiple</id>
    <content type="html"><![CDATA[<div class='post'>
Example Vagrantfile below for setting up multiple virtual machines and using chef to provision them<br /><br /><br /><script src="https://gist.github.com/house9/5690784.js"></script><noscript>Your reader does not support javascript - please view configuration here - https://gist.github.com/house9/5690784#file-vagrantfile-multibox-chef-rb  </noscript><br />Resources<br /><br /><ul><li><a href="http://docs.vagrantup.com/v2/multi-machine/index.html">http://docs.vagrantup.com/v2/multi-machine/index.html</a>&nbsp;</li><li><a href="http://jbbarth.com/posts/2011-03-20-vagrant-provisioning-with-chefsolo.html">http://jbbarth.com/posts/2011-03-20-vagrant-provisioning-with-chefsolo.html</a>&nbsp;</li></ul></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HipChat is now free!]]></title>
    <link href="http://jessehouse.com/blog/2013/03/21/hipchat-is-now-free/"/>
    <updated>2013-03-21T00:00:00-07:00</updated>
    <id>http://jessehouse.com/blog/2013/03/21/hipchat-is-now-free</id>
    <content type="html"><![CDATA[<div class='post'>
Just got an email from <a href="https://www.hipchat.com/">HipChat</a> - now free for small groups - awesome!<br /><br /><div class="separator" style="clear: both; text-align: center;"></div><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/-5_HhmM8Ilx8/UUs5raR5bHI/AAAAAAAAC7A/IJ_-ooOZJhY/s1600/hipchat.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-5_HhmM8Ilx8/UUs5raR5bHI/AAAAAAAAC7A/IJ_-ooOZJhY/s1600/hipchat.png" /></a></div><br /></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails continuous integration (CI) with Jenkins the easy way with Chef and Knife]]></title>
    <link href="http://jessehouse.com/blog/2013/02/23/ruby-on-rails-continuous-integration-ci/"/>
    <updated>2013-02-23T00:00:00-08:00</updated>
    <id>http://jessehouse.com/blog/2013/02/23/ruby-on-rails-continuous-integration-ci</id>
    <content type="html"><![CDATA[<div class='post'>
Do you need a CI build setup for your Ruby on Rails app?<br /><br />Here are some <a href="http://www.opscode.com/chef/">chef</a> / <a href="http://matschaffer.github.com/knife-solo/">knife solo</a> scripts that will deploy a <a href="http://jenkins-ci.org/">Jenkins</a> server to run your <a href="http://www.martinfowler.com/articles/continuousIntegration.html">CI build</a> - you could be up and running in less than 1/2 an hour<br /><br /><a href="https://github.com/house9/ci_chef_jenkins_rails"><b>https://github.com/house9/ci_chef_jenkins_rails</b></a><br /><br />Check out the README for details<br /><br /><br /></div>
<h2>Comments</h2>
<div class='comments'>
<div class='comment'>
<div class='author'>patcon</div>
<div class='content'>
You might want to look into Pivotal Labs&#39; ciborg project &#8211; sounds like it&#39;s just what you&#39;re looking for :)<br /><br />https://github.com/pivotal/ciborg</div>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[> random tricks you can do with Rails]]></title>
    <link href="http://jessehouse.com/blog/2013/02/23/random-tricks-you-can-do-with-rails/"/>
    <updated>2013-02-23T00:00:00-08:00</updated>
    <id>http://jessehouse.com/blog/2013/02/23/random-tricks-you-can-do-with-rails</id>
    <content type="html"><![CDATA[<div class='post'>
There are bunch of really good nuggets in this presentation:<br /><br /><ul><li><a href="http://www.confreaks.com/videos/889-railsconf2012-ten-things-you-didn-t-know-rails-could-do">http://www.confreaks.com/videos/889-railsconf2012-ten-things-you-didn-t-know-rails-could-do</a>&nbsp;</li><li><a href="https://speakerdeck.com/jeg2/10-things-you-didnt-know-rails-could-do">https://speakerdeck.com/jeg2/10-things-you-didnt-know-rails-could-do</a></li></ul><div><br /></div></div>
]]></content>
  </entry>
  
</feed>
